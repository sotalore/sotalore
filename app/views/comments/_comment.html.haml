.Comment
  .Comment-author
    .Comment-authorName
      %span= comment.author_name
      = user_flair_tag(comment.author)
    - unless comment.subject == @parent
      .Comment-subject
        = link_to(comment.subject, comment.subject)
    .Comment-authorTime
      = local_time_ago(comment.created_at)
  .Comment-body{ class: "Comment-body--#{comment.comment_type}" }
    - if comment.message?
      = simple_format comment.body
    - elsif comment.revision?
      %table.Table
        %tr
          %th.text-centered(colspan="4") Updates to this item
        - comment.revision_changes.each do |name, (from, to)|
          %tr
            %th.text-right= name
            %td= from || content_tag(:em, 'none')
            %td &rarr;
            %td= to || content_tag(:em, 'none')

        - if comment.revision_result_changes.present?
          %tr
            %th.text-left(colspan="4") result changes
          - [ 'added', 'removed' ].each do |action|
            - Array(comment.revision_result_changes[action]).each do |(name, count)|
              %tr
                %td.text-right
                  %em= action
                %td(colspan="3")
                  #{count} #{name}
          - Array(comment.revision_result_changes['changes']).each do |name,(from, to)|
            %tr
              %th.text-right= name
              %td= from
              %td &rarr;
              %td= to

        - if comment.revision_ingredient_changes.present?
          %tr
            %th.text-left(colspan="4") ingredient changes
          - [ 'added', 'removed' ].each do |action|
            - Array(comment.revision_ingredient_changes[action]).each do |(name, count)|
              %tr
                %td.text-right
                  %em= action
                %td(colspan="3")
                  #{count} #{name}
          - Array(comment.revision_ingredient_changes['changes']).each do |name,(from, to)|
            %tr
              %th.text-right= name
              %td= from
              %td &rarr;
              %td= to



  - can_delete = policy(comment).destroy?
  - can_edit   = policy(comment).edit?
  - invisible  = !comment.visible
  - if can_delete || can_edit || invisible
    .Comment-controls
      = comment_visibility_button(comment)
      - if can_delete
        = destroy_icon_to([ comment.subject, comment ], control: true)
      - if can_edit
        = edit_icon_to([ :edit, comment.subject, comment ], control: true)
