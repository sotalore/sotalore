- page_title('Skills')

.mb-12.mx-2.mt-2

  = render partial: 'page_heading', locals: {with_avatar_controls: true}

  .SkillTable.mt-0{id: 'skillTable', data: { controller: 'skills-rollup' }}
    .tableRow.bg-white.font-bold.stickOne
      .skillCell.flex.flex-row.items-baseline
        %span.shrink.mr-1
          Skill
        %span.text-xs.opacity-8.font-normal (cost)
        .grow.text-center.font-normal.italic.text-sm
          - if @avatar
            - if params.key?(:show_all)
              = link_to("hide ignored", avatar_skills_path(@avatar, activity: @activity))
            - else
              = link_to('show all', avatar_skills_path(@avatar, activity: @activity, show_all: true))
      .xpCell.currentCell
        .level Current level
        .xp Spent XP
      .xpCell.targetCell
        .level Target level
        .xp Total XP
      .remainingXPCell Needed XP

    .tableRow.bg-parchment-double-shaded.stickTwo{id: 'totals'}
      .skillCell= @activity.upcase
      .xpCell.currentCell
        .xp.currentXP
      .xpCell.targetCell
        .xp.totalXP
      .remainingXPCell.remainingXP

    - @skills.each do |category, schools|
      .tableRow.bg-parchment-shaded.stickThree{id: category, data: {
            'skills-rollup-target': 'member',
            'rollup-target': 'totals'
          } }
        .skillCell= category.upcase
        .xpCell.currentCell
          %span.xp.currentXP
        .xpCell.targetCell
          %span.xp.totalXP
        .remainingXPCell
          %span.remainingXP

      - schools.each do |school, school_skills|
        - school_skills = avatar_visible_skills(@avatar, school_skills) unless params[:show_all]

        - if school_skills.any?
          .tableRow.bg-parchment-color{id: "#{category}-#{school}", data: {
              'skills-rollup-target': 'member',
              'rollup-target': category
            } }
            .skillCell= school.titleize
            .xpCell.currentCell
              .xp.currentXP
            .xpCell.targetCell
              .xp.totalXP
            .remainingXPCell
              .remainingXP

          - school_skills.each do |skill|
            = render Views::Skills::Row.new(skill, @avatar)

