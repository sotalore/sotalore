- page_title('Skills')

.mb-12.mx-2.mt-2

  = render partial: 'page_heading', locals: {with_avatar_controls: true}

  .SkillTable.mt-0{id: 'skillTable', data: { controller: 'skills-rollup' }}
    .tableRow.bg-white.font-bold.stickOne
      .skillCell
        Skill
        %span.text-xs.opacity-8.font-normal (cost)
      .xpCell.currentCell
        .level Current level
        .xp Spent XP
      .xpCell.targetCell
        .level Target level
        .xp Total XP
      .remainingXPCell Needed XP

    .tableRow.bg-parchment-double-shaded.stickTwo{id: 'totals'}
      .skillCell= @activity.upcase
      .xpCell.currentCell
        .xp.currentXP
      .xpCell.targetCell
        .xp.totalXP
      .remainingXPCell.remainingXP

    - @skills.each do |category, schools|
      .tableRow.bg-parchment-shaded.stickThree{id: category, data: {
            'skills-rollup-target': 'member',
            'rollup-target': 'totals'
          } }
        .skillCell= category.upcase
        .xpCell.currentCell
          %span.xp.currentXP
        .xpCell.targetCell
          %span.xp.totalXP
        .remainingXPCell
          %span.remainingXP

      - schools.each do |school, school_skills|
        - school_rollup_target = "#{category}-#{school}"
        .tableRow.bg-parchment-color{id: school_rollup_target, data: {
            'skills-rollup-target': 'member',
            'rollup-target': category
          } }
          .skillCell= school.titleize
          .xpCell.currentCell
            .xp.currentXP
          .xpCell.targetCell
            .xp.totalXP
          .remainingXPCell
            .remainingXP

        - school_skills.each do |skill|
          .tableRow.hover:bg-grey-200{ data: {
              controller: 'skills',
              'skills-xp-factor-value' => skill.xp_factor,
              'skills-avatar-update-url-value' => (@avatar ? avatar_skill_path(@avatar.id, skill.key) : nil),
              'skills-rollup-target' => 'member',
              'rollup-target' => school_rollup_target
              } }
            - current_skill = @current_skills[skill.key]
            .skillCell.skillName
              = skill.name
              %span.text-xs.opacity-8.font-normal (#{skill.xp_factor.to_s.sub(/.0$/, "")})
            .xpCell.currentCell
              .levelInput
                %input{ type: 'number', value: current_skill.current,
                  data: { 'skills-target': 'from', action: 'skills#calculateCurrent blur->skills#updateFrom' } }
              %span.xp{ data: { 'skills-target': 'current' }}
            .xpCell.targetCell
              .levelInput
                %input{ type: 'number', value: current_skill.target,
                  data: { 'skills-target': 'to', action: 'skills#calculateTotal  blur->skills#updateTo' } }
              %span.xp{ data: { 'skills-target': 'total' }}
            .remainingXPCell
              %span{ data: { 'skills-target': 'remaining' }}

