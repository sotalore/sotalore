- page_title(@scene.name)
= tile do
  = tile_heading(@scene.name) do
    = default_button_to('All', scenes_path)
    - if policy(@scene).edit?
      = edit_button_to('Edit', edit_scene_path(@scene))

  = tile_body do
    .grid.grid-cols-2.gap-4

      .col-span-2.md:col-span-1
        .Callout.Callout-primary
          - if @scene.level
            %strong= scene_level(@scene)
          - if @scene.pvp?
            %strong PVP
          - if @scene.scene_type
            %em= @scene.scene_type
          - if @scene.region
            in
            %strong= @scene.region
          - parent = @scene.parent
          - if parent && !parent.overworld?
            &mdash; nested in:
            - while parent && !parent.overworld?
              = link_to(parent.name, parent)
              - parent = parent.parent

      .col-span-2.md:col-span-1
        %p
          = link_to(@scene.sota_map_url, target: '_blank') do
            View map of <strong>#{@scene.name}</strong>
            = icon_external_link

        - parent, scene = @scene.parent, @scene
        - while parent && scene.has_parent_location_info?
          %p
            = link_to(scene.sota_map_in_parent_url, target: '_blank') do
              View location of <strong>#{scene.name}</strong> in <strong>#{parent.name}</strong>
              = icon_external_link
          - parent, scene = parent.parent, parent

.grid.grid-cols-6
  - can_upload = policy(@scene).edit?
  - have_images = @scene.images.any?

  - if can_upload || have_images
    = tile_with_heading('Gallery', class: 'col-span-6 md:col-span-3 lg:col-span-4') do
      - if have_images
        .grid.grid-cols-2.md:grid-cols-3.xl:grid-cols-4.gap-4.items-center{data: { controller: 'lightbox', 'lightbox-options-value': '{"selector": ".gallery-image"}' }}
          - @scene.images.each do |image|
            = turbo_frame_tag(image, class: 'inline-block relative') do
              %a.gallery-image{ href: rails_blob_path(image) }
                = image_tag(image.variant(:preview), class: 'h-auto max-w-full rounded-md drop-shadow-lg')
              - if policy(@scene).destroy?
                .absolute.bottom-1.right-1.opacity-30.hover:opacity-100
                  = destroy_icon_to(scene_path(attachment_id: image.id), size: :xs, data: { turbo_method: :delete, turbo_confirm: 'Are you sure?' })

      - if can_upload
        .mt-8.border-t-2.border-gray-200.pt-4
          = sl_form_with(model: @scene) do |form|
            = form.file_field :images, multiple: true, direct_upload: true, label: 'Upload images'
            = form.actions do
              = form.submit("Upload")

  = tile_with_heading('Comments', class: 'col-span-6 md:col-span-3 lg:col-span-2') do
    = render_comments_for(@scene)
